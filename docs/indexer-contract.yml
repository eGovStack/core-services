openapi: 3.0.1
info:
  title: Indexer service Api Documentation
  description: APIs available to initiate index jobs
  termsOfService: urn:tos
  contact:
    name: Abhishek Jain
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0
  version: 1.1.0
servers:
- url: /egov-indexer/index-operations
tags:
- name: egov-indexer service
paths:
  /index-operations/_legacyindex:
    post:
      tags:
      - egov-indexer service
      summary: This endpoint is used to start legacy index job to reindex records
        from DB. The data is fetched from DB by calling api mentioned in request in
        batches. The is useful when some record is present in DB but missing on index.
      description: Initiate legacy index job to index data from DB fetched by calling
        some api
      operationId: legacyIndexDataUsingPOST
      requestBody:
        description: legacyIndexRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LegacyIndexRequest'
        required: true
      responses:
        200:
          description: Success response is calculated tax.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/LegacyIndexResponse'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      x-codegen-request-body-name: legacyIndexRequest
  /index-operations/_reindex:
    post:
      tags:
      - egov-indexer service
      summary: This endpoint is used to start indexing job to reindex records from
        one index to another index.
      description: Reindex data from one index to another
      operationId: reIndexDataUsingPOST
      requestBody:
        description: reindexRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReindexRequest'
        required: true
      responses:
        200:
          description: Success response is calculated tax.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ReindexResponse'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      x-codegen-request-body-name: reindexRequest
  /index-operations/{key}/_index:
    post:
      tags:
      - egov-indexer service
      summary: This endpoint is used to index one record on a index. The information
        to pick correct config is provided with the data to be indexed.
      description: Index request to index one record on an index
      operationId: produceIndexJsonUsingPOST
      parameters:
      - name: key
        in: path
        description: key
        required: true
        schema:
          type: string
      requestBody:
        description: indexJson
        content:
          application/json:
            schema:
              type: object
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: object
        201:
          description: Created
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      x-codegen-request-body-name: indexJson
components:
  schemas:
    Role:
      required:
      - code
      - id
      - name
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        code:
          type: string
    ReindexResponse:
      type: object
      properties:
        ResponseInfo:
          $ref: '#/components/schemas/ResponseInfo'
        url:
          type: string
        totalRecordsToBeIndexed:
          type: number
        estimatedTime:
          type: string
        message:
          type: string
        jobId:
          type: string
    LegacyIndexResponse:
      type: object
      properties:
        ResponseInfo:
          $ref: '#/components/schemas/ResponseInfo'
        url:
          type: string
        message:
          type: string
        jobId:
          type: string
    ResponseInfo:
      type: object
      properties:
        apiId:
          type: string
        ver:
          type: string
        ts:
          type: number
        resMsgId:
          type: string
        msgId:
          type: string
        status:
          type: string
    ReindexRequest:
      type: object
      properties:
        RequestInfo:
          $ref: '#/components/schemas/RequestInfo'
        batchSize:
          type: integer
          format: int32
        index:
          type: string
        jobId:
          type: string
        reindexTopic:
          type: string
        startTime:
          type: integer
          format: int64
        tenantId:
          type: string
        totalRecords:
          type: integer
          format: int32
        type:
          type: string
    User:
      required:
      - emailId
      - id
      - mobileNumber
      - name
      - roles
      - tenantId
      - type
      - userName
      - uuid
      type: object
      properties:
        id:
          type: integer
          format: int64
        userName:
          type: string
        name:
          type: string
        type:
          type: string
        mobileNumber:
          type: string
        emailId:
          type: string
        roles:
          type: array
          items:
            $ref: '#/components/schemas/Role'
        tenantId:
          type: string
        uuid:
          type: string
    APIDetails:
      type: object
      properties:
        customQueryParam:
          type: string
        paginationDetails:
          $ref: '#/components/schemas/PaginationDetails'
        request:
          type: object
          properties: {}
        responseJsonPath:
          type: string
        tenantIdForOpenSearch:
          type: string
        uri:
          type: string
    ModelAndView:
      type: object
      properties:
        empty:
          type: boolean
        model:
          type: object
          properties: {}
        modelMap:
          type: object
          additionalProperties:
            type: object
            properties: {}
        reference:
          type: boolean
        status:
          type: string
          enum:
          - "100"
          - "101"
          - "102"
          - "103"
          - "200"
          - "201"
          - "202"
          - "203"
          - "204"
          - "205"
          - "206"
          - "207"
          - "208"
          - "226"
          - "300"
          - "301"
          - "302"
          - "303"
          - "304"
          - "305"
          - "307"
          - "308"
          - "400"
          - "401"
          - "402"
          - "403"
          - "404"
          - "405"
          - "406"
          - "407"
          - "408"
          - "409"
          - "410"
          - "411"
          - "412"
          - "413"
          - "414"
          - "415"
          - "416"
          - "417"
          - "418"
          - "419"
          - "420"
          - "421"
          - "422"
          - "423"
          - "424"
          - "426"
          - "428"
          - "429"
          - "431"
          - "451"
          - "500"
          - "501"
          - "502"
          - "503"
          - "504"
          - "505"
          - "506"
          - "507"
          - "508"
          - "509"
          - "510"
          - "511"
        view:
          $ref: '#/components/schemas/View'
        viewName:
          type: string
    RequestInfo:
      required:
      - action
      - apiId
      - authToken
      - correlationId
      - did
      - key
      - msgId
      - ts
      - userInfo
      - ver
      type: object
      properties:
        apiId:
          type: string
        ver:
          type: string
        ts:
          type: integer
          format: int64
        action:
          type: string
        did:
          type: string
        key:
          type: string
        msgId:
          type: string
        authToken:
          type: string
        correlationId:
          type: string
        userInfo:
          $ref: '#/components/schemas/User'
    View:
      type: object
      properties:
        contentType:
          type: string
    LegacyIndexRequest:
      type: object
      properties:
        RequestInfo:
          $ref: '#/components/schemas/RequestInfo'
        apiDetails:
          $ref: '#/components/schemas/APIDetails'
        jobId:
          type: string
        legacyIndexTopic:
          type: string
        startTime:
          type: integer
          format: int64
        tenantId:
          type: string
        totalRecords:
          type: integer
          format: int32
    PaginationDetails:
      type: object
      properties:
        maxPageSize:
          type: integer
          format: int32
        offsetKey:
          type: string
        sizeKey:
          type: string
        startingOffset:
          type: integer
          format: int32
