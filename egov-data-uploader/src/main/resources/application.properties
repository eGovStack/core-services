#--------------------------- DB CONFIGURATIONS ---------------------------#


spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.url=jdbc:postgresql://localhost:5432/dataupload
spring.datasource.username=postgres
spring.datasource.password=postgres



#--------------------------- PATH & PORT CONFIGURATIONS ---------------------------#

# SET CONTEXT PATH
server.contextPath=/data-uploader
server.port=8082

#----------------------------- FLYWAY CONFIGURATIONS ------------------------------#

flyway.user=postgres
flyway.password=postgres
flyway.outOfOrder=true
flyway.table=data_upload_schema
flyway.baseline-on-migrate=true
flyway.url=jdbc:postgresql://localhost:5432/dataupload
flyway.locations=db/migration/ddl,db/migration/main,db/migration/seed


filestore.host=https://dev.digit.org
filestore.get.endpoint=/filestore/v1/files/id
filestore.post.endpoint=/filestore/v1/files

business.module.host=http://localhost:9999

egov.uploadJob.update.topic=update-upload-jobs
egov.uploadJob.save.topic=save-upload-jobs

response.file.name.prefix=Response-

uploadjob.update.progress.size=10

kafka.topics.dataupload=infra.data.upload
kafka.topics.dataupload.key=infra.data.upload.key

logging.pattern.console=%clr(%X{CORRELATION_ID:-}) %clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr(${PID:- }){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}


#upload.json.path=https://raw.githubusercontent.com/egovernments/egov-services/master/core/egov-data-uploader/src/main/resources/assets.yml,https://raw.githubusercontent.com/egovernments/egov-services/master/core/egov-data-uploader/src/main/resources/dummy.yml,https://raw.githubusercontent.com/egovernments/egov-services/master/core/egov-data-uploader/src/main/resources/LCMS.yml,https://raw.githubusercontent.com/egovernments/egov-services/master/core/egov-data-uploader/src/main/resources/SWM.yml
#upload.json.path=file:///home/sudhanshu/Downloads/egov-data-uploader/src/main/resources/employee_create.json,file:///home/sudhanshu/Downloads/egov-data-uploader/src/main/resources/assets.json
upload.json.path=https://raw.githubusercontent.com/egovernments/egov-services/master/core/egov-data-uploader/src/main/resources/property-upload.json,https://raw.githubusercontent.com/egovernments/egov-services/master/core/egov-data-uploader/src/main/resources/localization.json,https://raw.githubusercontent.com/egovernments/egov-services/master/core/egov-data-uploader/src/main/resources/CollectionReceiptWorkflow.json,https://raw.githubusercontent.com/egovernments/egov-services/master/core/egov-data-uploader/src/main/resources/EmployeeUpload.json
internal.file.folder.path=D:\\propertyuploader
template.download.prefix=https://raw.githubusercontent.com/egovernments/egov-services/master/core/egov-data-uploader/src/main/resources/upload-templates


# Property uploader fields
property.module.name=property-upload
property.host=https://dev.digit.org/
property.create=pt-services-v2/property/_create

# KAFKA CONSUMER CONFIGURATIONS
spring.kafka.bootstrap.servers=localhost:9092

#spring.kafka.consumer.enable-auto-commit=true
#spring.kafka.consumer.auto-commit-interval=100
#spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.value-deserializer=org.egov.dataupload.consumer.HashMapDeserializer
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.group-id=data-upload




# KAFKA PRODUCER CONFIGURATIONS
kafka.producer.config.retries_config=0
kafka.producer.config.batch_size_config=16384
kafka.producer.config.linger_ms_config=1
kafka.producer.config.buffer_memory_config=33554432

spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
